{
  "rules": {
    "users": {
      "$email": {
        ".read": "auth.uid != null",
        ".write": "auth.uid != null && auth.token.email.replace('.', 'DOT') === $email"
      }
    },
    "userSettings": {
      "$uid": {
        ".read": "auth.uid != null && auth.uid == $uid",
        ".write": "auth.uid != null && auth.uid == $uid"
      }
    },
    "collectionUsers": {
      "$collection_id": {
        ".read": "auth.uid != null && (root.child('collectionUsers').child($collection_id).hasChild(auth.uid) || !root.child('collections').hasChild($collection_id))",
        ".write": "auth.uid != null && (root.child('collectionUsers').child($collection_id).hasChild(auth.uid) || !root.child('collections').hasChild($collection_id))"
      }
    },
    "userCollections": {
      "$uid": {
        "collectionOrder": {
          ".read": "auth.uid != null && auth.uid == $uid",
          ".write": "auth.uid != null && auth.uid == $uid"
        },
        "collections": {
          ".read": "auth.uid != null && auth.uid == $uid",
          ".write": "auth.uid != null && auth.uid == $uid"
        }
      }
    },
    "collections": {
      "$collection_id": {
        ".read": "auth.uid != null && root.child('collectionUsers').child($collection_id).hasChild(auth.uid)",
        ".write": "auth.uid != null && root.child('collectionUsers').child($collection_id).hasChild(auth.uid)"
      }
    },
    "groups": {
      "$collection_id": {
        ".read": "auth.uid != null && root.child('collectionUsers').child($collection_id).hasChild(auth.uid)",
        ".write": "auth.uid != null && root.child('collectionUsers').child($collection_id).hasChild(auth.uid)"
      }
    }
  }
}
